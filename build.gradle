apply plugin: 'java'
apply plugin: 'application'
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}
 
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'com.criteo.annoy.HelloAnnoy'

repositories {
   jcenter()
}

configurations {
    javacpp
}
ext {
    artifactId = "annoy-jni"
    groupId = "com.criteo.annoy"
}

dependencies {
    javacpp group: 'org.bytedeco', name: 'javacpp', version: '1.4.4'
    compile configurations.javacpp.dependencies
    testCompile 'junit:junit:4.12'

}

task hello() << {
    def a = test.classpath//sourceSets.main.java
    a.properties.each { println "${it.key} -> ${it.value}" }
}

def AnnoyLibConfigClass= "AnnoyLibConfig"
def AnnoyLibClass= "AnnoyLib"

task compileAnnoyConfig(type: JavaCompile) {
    source = fileTree(dir: 'src', include: "**/${AnnoyLibConfigClass}.java")
    destinationDir = file(sourceSets.main.java.outputDir)
    classpath = files([configurations.javacpp.asPath])
}

task copyCpp(type: Copy) {
    from "src/main/cpp/"
    include "**"
    into file("${sourceSets.main.java.outputDir}/com/criteo/annoy/")
}

task generateJniClass(type: JavaExec, dependsOn: ['compileAnnoyConfig', 'copyCpp']) {
    classpath = files([configurations.javacpp.asPath])
    main = 'org.bytedeco.javacpp.tools.Builder'
    args = [
        '-classpath', sourceSets.main.java.outputDir,
        '-d', 'src/main/java/',
        "com.criteo.annoy.${AnnoyLibConfigClass}"
    ]
}

task compileAnnoyLib(type: JavaCompile) {
    source = fileTree(dir: 'src', include: ["**/${AnnoyLibClass}.java", "**/${AnnoyLibConfigClass}.java"])
    destinationDir = file(sourceSets.main.java.outputDir)
    classpath = files([configurations.javacpp.asPath])
}

task generateAnnoyLibrary(type: JavaExec, dependsOn: ['generateJniClass', 'compileAnnoyLib']) {
    classpath = files([configurations.javacpp.asPath])
    main = 'org.bytedeco.javacpp.tools.Builder'
    args = [
        '-classpath', sourceSets.main.java.outputDir,
        '-nodelete',
        "com.criteo.annoy.${AnnoyLibClass}"
    ]
}
compileJava.dependsOn generateAnnoyLibrary
compileTestJava.dependsOn generateAnnoyLibrary
