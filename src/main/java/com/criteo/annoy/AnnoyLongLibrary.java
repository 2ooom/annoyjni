// Targeted by JavaCPP version 1.4.4: DO NOT EDIT THIS FILE

package com.criteo.annoy;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

public class AnnoyLongLibrary extends com.criteo.annoy.AnnoyLongLibraryConfig {
    static { Loader.load(); }

// Parsed from annoyint.h

// #include "annoylib.h"
// #include "kissrandom.h"
public static native long createAngular(int f);

public static native long createDotProduct(int f);

public static native long createEuclidean(int f);

public static native long createManhattan(int f);

public static native long createHamming(int f);

public static native void deleteIndex(long ptr);

public static native void addItem(long ptr, int item, FloatPointer w);
public static native void addItem(long ptr, int item, FloatBuffer w);
public static native void addItem(long ptr, int item, float[] w);

public static native void build(long ptr, int q);

public static native @Cast("bool") boolean save(long ptr, @Cast("char*") BytePointer filename);
public static native @Cast("bool") boolean save(long ptr, @Cast("char*") ByteBuffer filename);
public static native @Cast("bool") boolean save(long ptr, @Cast("char*") byte[] filename);

public static native void unload(long ptr);

public static native @Cast("bool") boolean load(long ptr, @Cast("char*") BytePointer filename);
public static native @Cast("bool") boolean load(long ptr, @Cast("char*") ByteBuffer filename);
public static native @Cast("bool") boolean load(long ptr, @Cast("char*") byte[] filename);

public static native float getDistance(long ptr, int i, int j);

public static native void getNnsByItem(long ptr, int item, int n,
                  int search_k, IntPointer result, FloatPointer distances);
public static native void getNnsByItem(long ptr, int item, int n,
                  int search_k, IntBuffer result, FloatBuffer distances);
public static native void getNnsByItem(long ptr, int item, int n,
                  int search_k, int[] result, float[] distances);

public static native void getNnsByVector(long ptr, FloatPointer w, int n,
                    int search_k, IntPointer result, FloatPointer distances);
public static native void getNnsByVector(long ptr, FloatBuffer w, int n,
                    int search_k, IntBuffer result, FloatBuffer distances);
public static native void getNnsByVector(long ptr, float[] w, int n,
                    int search_k, int[] result, float[] distances);

public static native int getNItems(long ptr);

public static native void verbose(long ptr, @Cast("bool") boolean v);

public static native void getItem(long ptr, int item, FloatPointer v);
public static native void getItem(long ptr, int item, FloatBuffer v);
public static native void getItem(long ptr, int item, float[] v);

}
